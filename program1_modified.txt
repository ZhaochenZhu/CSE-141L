move 0
cpy D0, R6  
lw R0, R6                   // load 11-bit block to registers
move 0
cpy D0, R2
add R2, R6
cpy D1, R2
addi R2, 1
cpy D2, R7   				 //R7 equals to R6 + 1
lw R1, R7
lsl R0, 5
cpy D3, R2
lsr R1, 4
cpy D3, R3
lsl R3, 1
cpy D3, R3
xor R2, R3
cpy D3, R2
rxor R2, R4
xor R2, R4
cpy D3, R2                  //DataMem[30+counter] = R2
move 30
cpy D0, R0
add R0, R6
cpy D1, R7
sw R2, R7   
lw R0, R6                   //load value back to R0        
lsr R2, 4
cpy D3, R2
lsl R2, 4
cpy D3, R2
lsr R1, 1
cpy D3, R3
lsl R3, 5
cpy D3, R3
lsr R3, 4
cpy D3, R3
xor R2, R3
cpy D3, R2
rxor R2, R3
lsl R3, 4
cpy D3, R3
lsr R1, 1
cpy D3, R4
move 0
cpy D0, R1
add R1, R4
cpy D1, R0
move 0                      //load the value back to R1
cpy D0, R2
add R2, R6
cpy D1, R2
addi R2, 1
cpy D2, R7   				 //R7 equals to R6 + 1
lw R1, R7
lsl R0, 5
cpy D3, R0
xor R0, R3
cpy D3, R0
lsl R1, 7
cpy D3, R2
lsr R2, 4
cpy D3, R2
xor R0, R2
cpy D3, R4
lw R0, R6                   //load the value back to R0
lsr R0, 1
cpy D3, R2
lsl R2, 6
cpy D3, R2
lsl R1 1
cpy D3, R3
lsr R3, 6
cpy D3, R3
lsl R3, 4
cpy D3, R3
xor R2, R3
cpy D3, R2
lsr R1, 2
cpy D3, R3
lsl R3, 6
cpy D3, R3
lsr R3, 2
cpy D3, R3
xor R2, R3
cpy D3, R2
lsl R1, 7
cpy D3, R3
lsr R1, 6
cpy D3, R3
xor R2, R3
cpy D3, R2
rxor R2, R3
lsl R3, 2
cpy D3, R3
xor R3, R4
cpy D3, R4
lsr R0, 2
cpy D3, R2
lsl R2, 7
cpy D3, R2
lsl R0, 7
cpy D3, R3
lsr R0, 1
cpy D3, R3
xor R2, R3
cpy D3, R2
lsl R1, 1
cpy D3, R3
lsr R1, 7
cpy D3, R3
lsl R3, 5
cpy D3, R3
xor R2, R3
cpy D3, R2
lsr R1, 3
cpy D3, R3
lsl R3, 6
cpy D3, R3
lsr R3, 3
cpy D3, R3
xor R2, R3
cpy D3, R2
lsl R1, 6
cpy D3, R3
lsr R1, 5
cpy D3, R3
xor R2, R3
cpy D3, R2
rxor R2, R3
lsl R3 1
cpy D3, R3
xor R3, R4
cpy D3, R4
rxor R1, R2
rxor R2, R3
xor R2, R3
cpy D3, R2              
move 30                     //load the value stored in memory[30+counter] in R3
cpy D0, R0
add R0, R6
cpy D1, R1
lw R3, R1        
lsl R3, 7
cpy D3, R3
lsr R3, 7
cpy D3, R3
xor R2, R3
cpy D3, R2       
move 0                       //store the value of R4 into R0
cpy D0, R1
add R1, R4
cpy D1, R0        
lsl R0, 3
cpy D3, R3
lsr R3, 7
cpy D3, R3
xor R2, R3
cpy D3, R3
lsl R0, 5
cpy D3, R3
rxor R3, R3
xor R0, R2
cpy D3, R0        
move 31
cpy D0, R1
add R1, R6
cpy D1, R7
sw R0, R7      
move 0                      //increase counter by 2
cpy D0, R0
add R0, R6
cpy D1, R0
addi R0, 2
cpy D2, R6
move 30                     //conditional branch of the loop
cpy D0, R2
move 0
cpy D0, R3
add R3, R6
cpy D3, R1
beqr R2, R3
