counter1 = 0;
R1 = DataMem[32];           //R1 is the pattern

//requirement =a
index = 0;
while index<32{
    R0 = DataMem[index];    //R0 is the data
    for(int i=0;i<4;i++){
        R2 = R0 PM R1;
        if(R2==1){
            counter1+=1;
        }
        R0 = R0 << 1;
    } 
    index++:   
}
DataMem[33] = counter1;


// requirement b
counter2 = 0;
index = 0;
while index<32{
    R0 = DataMem[index];
    for(int i=0;i<4;i++){
        R2 = R0 PM R1;
        if(R2==1){
            counter2+=1;
            break;
        }
        R0 = R0 << 1;
    }
    index++;    
}
DataMem[34] = counter2;

counter3 = 0;
R0 = DataMem[0];
for(int i=0;i<4;i++){
    R2 = R0 PM R1;
    if(R2==1){
        counter3+=1;
    }
    R0 = R0 << 1;
}    
index=1;
while index<32{
    R3 = DataMem[index];
    R4 = R3 >> 4;
    R0 = R0 + R4;
    for(int i=0;i<4;i++){
        R2 = R0 PM R1;
        if(R2==1){
            counter3+=1;
            break;
        }
        R0 = R0 << 1;
    }
    R0 = DataMem[index]
    for(int i=0;i<4;i++){
        R2 = R0 PM R1;
        if(R2==1){
            counter3+=1;
        }
        R0 = R0 << 1;
    }
    index++;
}